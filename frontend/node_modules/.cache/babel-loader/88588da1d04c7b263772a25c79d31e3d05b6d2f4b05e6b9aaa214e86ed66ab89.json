{"ast":null,"code":"var _jsxFileName = \"/Users/aanchaljain/Downloads/12-adv-starting-project/frontend/src/Pages/NewEvent.js\";\nimport EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEvent() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n}\n_c = NewEvent;\nexport default NewEvent;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    //input names\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost/8080/events', {\n    method: 'POST',\n    body: JSON.stringify(eventData),\n    headers: {\n      'Content-type': 'application.json'\n    }\n  });\n  if (!response.ok) {\n    json({\n      message: 'Could not save event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\n;\nvar _c;\n$RefreshReg$(_c, \"NewEvent\");","map":{"version":3,"names":["EventForm","json","jsxDEV","_jsxDEV","NewEvent","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","body","JSON","stringify","headers","ok","message","status","redirect","$RefreshReg$"],"sources":["/Users/aanchaljain/Downloads/12-adv-starting-project/frontend/src/Pages/NewEvent.js"],"sourcesContent":["import EventForm from \"../components/EventForm\";\nimport { json } from \"react-router-dom\";\n\nfunction NewEvent() {\n    return (\n      <EventForm></EventForm>\n    );\n  }\n  \n  export default NewEvent;\n  \n  export async function action({request,params}){\n    const data=await request.formData();\n\n    const eventData={\n      title:data.get('title'),\n      image:data.get('image'),\n      date:data.get('date'),       //input names\n      description:data.get('description'),\n    }\n    const response=await fetch('http://localhost/8080/events',{\n      method:'POST',\n      body:JSON.stringify(eventData),\n      headers:{\n        'Content-type':'application.json'\n      }\n    })\n\n    if(!response.ok){\n      json({message:'Could not save event'},{status:500});\n    }\n\n    return redirect('/events')\n  };"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAChB,oBACED,OAAA,CAACH,SAAS;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AAE3B;AAACC,EAAA,GAJML,QAAQ;AAMf,eAAeA,QAAQ;AAEvB,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAACC,OAAO;IAACC;EAAM,CAAC,GAAAF,IAAA;EAC3C,MAAMG,IAAI,GAAC,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAEnC,MAAMC,SAAS,GAAC;IACdC,KAAK,EAACH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBC,KAAK,EAACL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACvBE,IAAI,EAACN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IAAQ;IAC7BG,WAAW,EAACP,IAAI,CAACI,GAAG,CAAC,aAAa;EACpC,CAAC;EACD,MAAMI,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IACxDC,MAAM,EAAC,MAAM;IACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC;IAC9BY,OAAO,EAAC;MACN,cAAc,EAAC;IACjB;EACF,CAAC,CAAC;EAEF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAC;IACd5B,IAAI,CAAC;MAAC6B,OAAO,EAAC;IAAsB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACrD;EAEA,OAAOC,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC;AAAC,IAAAvB,EAAA;AAAAwB,YAAA,CAAAxB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/aanchaljain/Downloads/12-adv-starting-project/frontend/src/Pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  if (events.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: events.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Could not fetch events'\n    };\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\n;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","resData","json","$RefreshReg$"],"sources":["/Users/aanchaljain/Downloads/12-adv-starting-project/frontend/src/Pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const events=useLoaderData();\n\n  if(events.isError){\n    return <p>{events.message}</p>\n  }\n \n  return (\n    <>\n      \n      {<EventsList events={events}/>}\n    </>\n  );\n}\n\nexport default EventsPage;\n\nexport async function loader(){\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    return {isError:true, message:'Could not fetch events'};\n    \n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n\n};"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAACR,aAAa,CAAC,CAAC;EAE5B,IAAGQ,MAAM,CAACC,OAAO,EAAC;IAChB,oBAAON,OAAA;MAAAO,QAAA,EAAIF,MAAM,CAACG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EAEA,oBACEZ,OAAA,CAAAE,SAAA;IAAAK,QAAA,eAEGP,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAC9B,CAAC;AAEP;AAACR,EAAA,CAbQD,UAAU;EAAA,QACJN,aAAa;AAAA;AAAAgB,EAAA,GADnBV,UAAU;AAenB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,MAAMA,CAAA,EAAE;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAACX,OAAO,EAAC,IAAI;MAAEE,OAAO,EAAC;IAAwB,CAAC;EAEzD,CAAC,MAAM;IACL,MAAMU,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACb,MAAM;EACvB;AAEF;AAAC;AAAC,IAAAQ,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/aanchaljain/Downloads/12-adv-starting-project/frontend/src/App.js\";\n// Challenge / Exercise\nimport { createBrowserRouter } from \"react-router-dom\";\nimport { RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./Pages/Root\";\nimport HomePage from \"./Pages/Home\";\nimport EventRootLayout from \"./Pages/EventRoot\";\nimport EventDetail from \"./Pages/EventDetail\";\nimport NewEvent from \"./Pages/NewEvent\";\nimport EditEvent from \"./Pages/EditEvent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 28\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this),\n    children: [{\n      path: \":eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 35\n      }, this)\n    }, {\n      path: \":eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 45\n      }, this)\n    }]\n  }]\n}]);\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","RootLayout","HomePage","EventRootLayout","EventDetail","NewEvent","EditEvent","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","_c","$RefreshReg$"],"sources":["/Users/aanchaljain/Downloads/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\nimport { createBrowserRouter } from \"react-router-dom\";\nimport { RouterProvider } from \"react-router-dom\";\nimport RootLayout from \"./Pages/Root\";\nimport HomePage from \"./Pages/Home\";\nimport EventRootLayout from \"./Pages/EventRoot\";\nimport EventDetail from \"./Pages/EventDetail\";\nimport NewEvent from \"./Pages/NewEvent\";\nimport EditEvent from \"./Pages/EditEvent\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout></RootLayout>,\n    children: [\n      { path: \"\", element: <HomePage></HomePage> },\n      {\n        path: \"events\",\n        element: <EventRootLayout></EventRootLayout>,\n        children: [\n          { path: \":eventId\", element: <EventDetail></EventDetail> },\n          { path: \"new\", element: <NewEvent></NewEvent> },\n          { path: \":eventId/edit\", element: <EditEvent></EditEvent> },\n        ],\n      },\n    ],\n  },\n]);\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nfunction App() {\n  return <RouterProvider router={router}></RouterProvider>;\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,SAASA,mBAAmB,QAAQ,kBAAkB;AACtD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;EACEW,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACP,UAAU;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa,CAAC;EAClCC,QAAQ,EAAE,CACR;IAAEN,IAAI,EAAE,EAAE;IAAEC,OAAO,eAAEH,OAAA,CAACN,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW;EAAE,CAAC,EAC5C;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACL,eAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC;IAC5CC,QAAQ,EAAE,CACR;MAAEN,IAAI,EAAE,UAAU;MAAEC,OAAO,eAAEH,OAAA,CAACJ,WAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc;IAAE,CAAC,EAC1D;MAAEL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACH,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAE,CAAC,EAC/C;MAAEL,IAAI,EAAE,eAAe;MAAEC,OAAO,eAAEH,OAAA,CAACF,SAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAE,CAAC;EAE/D,CAAC;AAEL,CAAC,CACF,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOT,OAAA,CAACR,cAAc;IAACS,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;AAC1D;AAACG,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}